#!/bin/bash

CONFIG_HEADER=config.h
TEST_CFLAGS="-Wall -Werror -O0"
TEST_CC="gcc"
TEMP_MAKEFILE=`mktemp`
TEST_FILE=test.c

cat Makefile.in > $TEMP_MAKEFILE

bool_test() {
	local TEST_NAME=$1
	local CONFIG_NAME=$2
	local RESULT=no
	echo -e "Checking for $TEST_NAME... \c" 

	cat > $TEST_FILE
	$TEST_CC $TEST_CFLAGS -c $TEST_FILE > /dev/null 2>&1

	if [ $? -eq 0 ]; then
		RESULT=yes
	fi
	echo $RESULT
	sed -i "s/@$CONFIG_NAME@/$RESULT/g" $TEMP_MAKEFILE
}

system_test() {
	local CONFIG_NAME=$1
	local RESULT
	echo -e "Checking for operation system... \c" 
	if [ "$OS" == "Windows_NT" ]; then
		RESULT=Win32
	else
		RESULT=`uname -s`
	fi
	echo $RESULT
	sed -i "s/@$CONFIG_NAME@/$RESULT/g" $TEMP_MAKEFILE
}

system_test SYSTEM

bool_test select HAVE_SELECT <<EOT
#ifdef WIN32
#include <winsock.h>
#else
#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>
#endif
int main(){
    select(0, NULL, NULL, NULL, NULL);
    return 0;
}
EOT

bool_test poll HAVE_POLL <<EOT
#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>
#include <sys/poll.h>
int main(){
    poll(NULL, 0, 0);
    return 0;
}
EOT

bool_test epoll HAVE_EPOLL <<EOT
#ifdef WIN32
#include "wepoll.h"
#else
#include <sys/time.h>
#include <sys/types.h>
#include <unistd.h>
#include <sys/epoll.h>
#endif

int main(){
    epoll_wait(0, NULL, 0, -1);
    return 0;
}
EOT

bool_test kqueue HAVE_KQUEUE <<EOT
#include <sys/types.h>
#include <sys/event.h>
#include <sys/time.h>

int main(){
    (void)kqueue();
    return 0;
}
EOT

rm $TEST_FILE test.o

cat $TEMP_MAKEFILE > Makefile
